// <auto-generated />
using System;
using GraphQL_Demo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraphQL_Demo.Migrations
{
    [DbContext(typeof(GraphQLDbContext))]
    [Migration("20250912174056_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GraphQL_Demo.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Start your meal right!",
                            Name = "Appetizers"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Hearty and satisfying meals.",
                            Name = "Main Course"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Sweet treats to end your meal.",
                            Name = "Desserts"
                        });
                });

            modelBuilder.Entity("GraphQL_Demo.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Crispy garlic bread served with marinara sauce.",
                            ImageUrl = "/images/garlic_bread.jpg",
                            Name = "Garlic Bread",
                            Price = 5.9900000000000002
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Toasted bread topped with fresh tomatoes, garlic, and basil.",
                            ImageUrl = "/images/bruschetta.jpg",
                            Name = "Bruschetta",
                            Price = 6.4900000000000002
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Juicy grilled chicken with herb butter and vegetables.",
                            ImageUrl = "/images/grilled_chicken.jpg",
                            Name = "Grilled Chicken",
                            Price = 13.99
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Classic Italian lasagna with layers of beef and cheese.",
                            ImageUrl = "/images/lasagna.jpg",
                            Name = "Beef Lasagna",
                            Price = 14.5
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "Moist chocolate cake with rich ganache frosting.",
                            ImageUrl = "/images/chocolate_cake.jpg",
                            Name = "Chocolate Cake",
                            Price = 7.25
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "Classic coffee-flavored Italian dessert with mascarpone.",
                            ImageUrl = "/images/tiramisu.jpg",
                            Name = "Tiramisu",
                            Price = 7.75
                        });
                });

            modelBuilder.Entity("GraphQL_Demo.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpecialRequests")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactInfo = "john@example.com",
                            CustomerName = "John Doe",
                            NumberOfGuests = 2,
                            ReservationDate = new DateTime(2025, 9, 15, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            SpecialRequests = "Window seat, please."
                        },
                        new
                        {
                            Id = 2,
                            ContactInfo = "alice.smith@example.com",
                            CustomerName = "Alice Smith",
                            NumberOfGuests = 4,
                            ReservationDate = new DateTime(2025, 9, 16, 20, 30, 0, 0, DateTimeKind.Unspecified),
                            SpecialRequests = "Vegetarian options."
                        },
                        new
                        {
                            Id = 3,
                            ContactInfo = "michael.j@example.com",
                            CustomerName = "Michael Johnson",
                            NumberOfGuests = 6,
                            ReservationDate = new DateTime(2025, 9, 17, 18, 45, 0, 0, DateTimeKind.Unspecified),
                            SpecialRequests = "Birthday celebration."
                        },
                        new
                        {
                            Id = 4,
                            ContactInfo = "sara.lee@example.com",
                            CustomerName = "Sara Lee",
                            NumberOfGuests = 3,
                            ReservationDate = new DateTime(2025, 9, 18, 21, 15, 0, 0, DateTimeKind.Unspecified),
                            SpecialRequests = "No peanuts, please."
                        });
                });

            modelBuilder.Entity("GraphQL_Demo.Entities.Menu", b =>
                {
                    b.HasOne("GraphQL_Demo.Entities.Category", null)
                        .WithMany("Menus")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GraphQL_Demo.Entities.Category", b =>
                {
                    b.Navigation("Menus");
                });
#pragma warning restore 612, 618
        }
    }
}
